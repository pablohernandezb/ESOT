)
# Melt the data frame to long format
inflation_long <- inflation_data %>%
pivot_longer(cols = c(BCV, OVF), names_to = "Source", values_to = "Inflation_Rate")
# Adjust label vertical positions slightly for better readability
inflation_long <- inflation_long %>%
mutate(
label_vjust = ifelse(Source == "BCV", -0.7, -1.0) # Slightly different adjustments
)
# Create the inflation rate plot with log10 scale and point labels
ggplot(inflation_long, aes(x = Año, y = Inflation_Rate, color = Source)) +
geom_line(linewidth = 1) +
geom_point(size = 3) +
geom_text(aes(label = format(Inflation_Rate, big.mark = ",", scientific = FALSE),
vjust = label_vjust), # Use adjusted vjust
hjust = 0.5, size = 3) +
scale_y_log10(labels = comma) +
scale_x_continuous(breaks = 2016:2024) +
scale_color_manual(values = c("BCV" = "blue", "OVF" = "red")) +
labs(
title = "Venezuela Annual Inflation Rate (BCV vs. OVF)",
subtitle = "Data from 2016 to 2024",
x = "Year",
y = "Annual Inflation Rate (Log Scale)",
color = "Source"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 12, color = "gray"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top"
)
# Create the data frame from the provided text
inflation_data <- data.frame(
Año = 2016:2024,
BCV = c(274.4, 862.6, 130000, 9585.5, 2968.8, 686.4, 234.1, 189.8, 16.6),
OVF = c(550, 2683.7, 1698488.2, 7374.4, 3173, 660, 305.7, 193, 67)
)
# Melt the data frame to long format
inflation_long <- inflation_data %>%
pivot_longer(cols = c(BCV, OVF), names_to = "Source", values_to = "Inflation_Rate")
# Adjust label vertical positions slightly for better readability
inflation_long <- inflation_long %>%
mutate(
label_vjust = ifelse(Source == "BCV", -0.7, -1.0) # Slightly different adjustments
)
# Create the inflation rate plot with log10 scale and point labels
ggplot(inflation_long, aes(x = Año, y = Inflation_Rate, color = Source)) +
geom_line(linewidth = 1) +
geom_point(size = 3) +
geom_text(aes(label = format(Inflation_Rate, big.mark = ",", scientific = FALSE),
vjust = label_vjust), # Use adjusted vjust
hjust = 0.5, size = 3) +
scale_y_log10(labels = comma) +
scale_x_continuous(breaks = 2016:2024) +
scale_color_manual(values = c("BCV" = "blue", "OVF" = "red")) +
labs(
title = "Venezuela Annual Inflation Rate (BCV vs. OVF)",
subtitle = "Data from 2016 to 2024",
x = "Year",
y = "Annual Inflation Rate (Log Scale)",
color = "Source"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 12, color = "gray"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top"
)
# Create the data frame from the provided text
inflation_data <- data.frame(
Año = 2016:2024,
BCV = c(274.4, 862.6, 130000, 9585.5, 2968.8, 686.4, 234.1, 189.8, 16.6),
OVF = c(550, 2683.7, 1698488.2, 7374.4, 3173, 660, 305.7, 193, 67)
)
# Melt the data frame to long format
inflation_long <- inflation_data %>%
pivot_longer(cols = c(BCV, OVF), names_to = "Source", values_to = "Inflation_Rate")
# Adjust label positions and orientations
inflation_long <- inflation_long %>%
mutate(
angle = 45,
hjust = ifelse(Source == "OVF", 0, 1), # Adjust horizontal alignment
vjust = ifelse(Source == "OVF", -0.5, 1.5) # Adjust vertical alignment
)
# Create the inflation rate plot with log10 scale and point labels
ggplot(inflation_long, aes(x = Año, y = Inflation_Rate, color = Source)) +
geom_line(linewidth = 1) +
geom_point(size = 3) +
geom_text(aes(label = format(Inflation_Rate, big.mark = ",", scientific = FALSE),
angle = angle, hjust = hjust, vjust = vjust),
size = 3) +
scale_y_log10(labels = comma) +
scale_x_continuous(breaks = 2016:2024) +
scale_color_manual(values = c("BCV" = "blue", "OVF" = "red")) +
labs(
title = "Venezuela Annual Inflation Rate (BCV vs. OVF)",
subtitle = "Data from 2016 to 2024",
x = "Year",
y = "Annual Inflation Rate (Log Scale)",
color = "Source"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 12, color = "gray"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top"
)
# Create the data frame from the provided text
inflation_data <- data.frame(
Año = 2016:2024,
BCV = c(274.4, 862.6, 130000, 9585.5, 2968.8, 686.4, 234.1, 189.8, 16.6),
OVF = c(550, 2683.7, 1698488.2, 7374.4, 3173, 660, 305.7, 193, 67)
)
# Melt the data frame to long format
inflation_long <- inflation_data %>%
pivot_longer(cols = c(BCV, OVF), names_to = "Source", values_to = "Inflation_Rate")
# Adjust label positions and orientations
inflation_long <- inflation_long %>%
mutate(
angle = 45,
hjust = ifelse(Source == "OVF", 0, 1), # Adjust horizontal alignment
vjust = ifelse(Source == "OVF", -0.5, 1.5) # Adjust vertical alignment
)
# Determine a slightly wider y-axis limit based on the maximum OVF value
max_ovf <- max(inflation_long$Inflation_Rate[inflation_long$Source == "OVF"], na.rm = TRUE)
y_upper_limit <- 1.2 * max_ovf # Increase by 20%
# Create the inflation rate plot with log10 scale and point labels
ggplot(inflation_long, aes(x = Año, y = Inflation_Rate, color = Source)) +
geom_line(linewidth = 1) +
geom_point(size = 3) +
geom_text(aes(label = format(Inflation_Rate, big.mark = ",", scientific = FALSE),
angle = angle, hjust = hjust, vjust = vjust),
size = 3) +
scale_y_log10(labels = comma, limits = c(min(inflation_long$Inflation_Rate, na.rm = TRUE) / 1.1, y_upper_limit)) + # Set y-axis limits
scale_x_continuous(breaks = 2016:2024) +
scale_color_manual(values = c("BCV" = "blue", "OVF" = "red")) +
labs(
title = "Venezuela Annual Inflation Rate (BCV vs. OVF)",
subtitle = "Data from 2016 to 2024",
x = "Year",
y = "Annual Inflation Rate (Log Scale)",
color = "Source"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 12, color = "gray"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top"
)
# Create the data frame from the provided text
inflation_data <- data.frame(
Año = 2016:2024,
BCV = c(274.4, 862.6, 130000, 9585.5, 2968.8, 686.4, 234.1, 189.8, 16.6),
OVF = c(550, 2683.7, 1698488.2, 7374.4, 3173, 660, 305.7, 193, 67)
)
# Melt the data frame to long format
inflation_long <- inflation_data %>%
pivot_longer(cols = c(BCV, OVF), names_to = "Source", values_to = "Inflation_Rate")
# Adjust label positions and orientations
inflation_long <- inflation_long %>%
mutate(
angle = 45,
hjust = ifelse(Source == "OVF", 0, 1), # Adjust horizontal alignment
vjust = ifelse(Source == "OVF", -0.5, 1.5) # Adjust vertical alignment
)
# Determine a slightly wider y-axis limit based on the maximum OVF value
max_ovf <- max(inflation_long$Inflation_Rate[inflation_long$Source == "OVF"], na.rm = TRUE)
y_upper_limit <- 1.2 * max_ovf # Increase by 20%
# Create the inflation rate plot with log10 scale and point labels
ggplot(inflation_long, aes(x = Año, y = Inflation_Rate, color = Source)) +
geom_line(linewidth = 1) +
geom_point(size = 3) +
geom_text(aes(label = format(Inflation_Rate, big.mark = ",", scientific = FALSE),
angle = angle, hjust = hjust, vjust = vjust),
size = 3) +
scale_y_log10(labels = comma, limits = c(min(inflation_long$Inflation_Rate, na.rm = TRUE) / 1.1, y_upper_limit)) + # Set y-axis limits
scale_x_continuous(breaks = 2016:2024) +
scale_color_manual(values = c("BCV" = "blue", "OVF" = "red")) +
labs(
title = "Venezuela Annual Inflation Rate (BCV vs. OVF)",
subtitle = "Data from 2016 to 2024",
x = "Year",
y = "Annual Inflation Rate (Log Scale)",
color = "Source"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 12, color = "gray"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top"
)
# Create the data frame from the provided text
inflation_data <- data.frame(
Año = 2016:2024,
BCV = c(274.4, 862.6, 130000, 9585.5, 2968.8, 686.4, 234.1, 189.8, 16.6),
OVF = c(550, 2683.7, 1698488.2, 7374.4, 3173, 660, 305.7, 193, 67)
)
# Melt the data frame to long format
inflation_long <- inflation_data %>%
pivot_longer(cols = c(BCV, OVF), names_to = "Source", values_to = "Inflation_Rate")
# Adjust label positions and orientations
inflation_long <- inflation_long %>%
mutate(
angle = 45,
hjust = ifelse(Source == "OVF", 0, 1), # Adjust horizontal alignment
vjust = ifelse(Source == "OVF", -0.5, 1.5) # Adjust vertical alignment
)
# Determine a slightly wider y-axis limit based on the maximum OVF value
max_ovf <- max(inflation_long$Inflation_Rate[inflation_long$Source == "OVF"], na.rm = TRUE)
y_upper_limit <- 1.2 * max_ovf # Increase by 20%
# Create the inflation rate plot with log10 scale and point labels
ggplot(inflation_long, aes(x = Año, y = Inflation_Rate, color = Source)) +
geom_line(linewidth = 1) +
geom_point(size = 3) +
geom_text(aes(label = format(Inflation_Rate, big.mark = ",", scientific = FALSE),
angle = angle, hjust = hjust, vjust = vjust),
size = 3) +
scale_y_log10(labels = comma, limits = c(min(inflation_long$Inflation_Rate, na.rm = TRUE) / 1.1, y_upper_limit)) + # Set y-axis limits
scale_x_continuous(breaks = 2016:2024) +
scale_color_manual(values = c("BCV" = "blue", "OVF" = "red")) +
labs(
title = "Venezuela Annual Inflation Rate (BCV vs. OVF)",
subtitle = "Data from 2016 to 2024",
x = "Year",
y = "Annual Inflation Rate (Log Scale)",
color = "Source"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 12, color = "gray"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top"
)
# Melt the data frame to long format
inflation_long <- inflation_data %>%
pivot_longer(cols = c(BCV, OVF), names_to = "Source", values_to = "Inflation_Rate")
# Adjust label positions and orientations
inflation_long <- inflation_long %>%
mutate(
angle = 45,
hjust = ifelse(Source == "OVF", 0, 1), # Adjust horizontal alignment
vjust = ifelse(Source == "OVF", -0.5, 1.5) # Adjust vertical alignment
)
# Determine a slightly wider y-axis limit based on the maximum OVF value
max_ovf <- max(inflation_long$Inflation_Rate[inflation_long$Source == "OVF"], na.rm = TRUE)
y_upper_limit <- 1.4 * max_ovf # Increase by 20%
# Create the inflation rate plot with log10 scale and point labels
ggplot(inflation_long, aes(x = Año, y = Inflation_Rate, color = Source)) +
geom_line(linewidth = 1) +
geom_point(size = 3) +
geom_text(aes(label = format(Inflation_Rate, big.mark = ",", scientific = FALSE),
angle = angle, hjust = hjust, vjust = vjust),
size = 3) +
scale_y_log10(labels = comma, limits = c(min(inflation_long$Inflation_Rate, na.rm = TRUE) / 1.1, y_upper_limit)) + # Set y-axis limits
scale_x_continuous(breaks = 2016:2024) +
scale_color_manual(values = c("BCV" = "blue", "OVF" = "red")) +
labs(
title = "Venezuela Annual Inflation Rate (BCV vs. OVF)",
subtitle = "Data from 2016 to 2024",
x = "Year",
y = "Annual Inflation Rate (Log Scale)",
color = "Source"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 12, color = "gray"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top"
)
# Create the data frame from the provided text
inflation_data <- data.frame(
Año = 2016:2024,
BCV = c(274.4, 862.6, 130000, 9585.5, 2968.8, 686.4, 234.1, 189.8, 16.6),
OVF = c(550, 2683.7, 1698488.2, 7374.4, 3173, 660, 305.7, 193, 67)
)
# Melt the data frame to long format
inflation_long <- inflation_data %>%
pivot_longer(cols = c(BCV, OVF), names_to = "Source", values_to = "Inflation_Rate")
# Adjust label positions and orientations
inflation_long <- inflation_long %>%
mutate(
angle = 45,
hjust = ifelse(Source == "OVF", 0, 1), # Adjust horizontal alignment
vjust = ifelse(Source == "OVF", -0.5, 1.5) # Adjust vertical alignment
)
# Determine a slightly wider y-axis limit based on the maximum OVF value
max_ovf <- max(inflation_long$Inflation_Rate[inflation_long$Source == "OVF"], na.rm = TRUE)
y_upper_limit <- 2 * max_ovf # Increase by 20%
# Create the inflation rate plot with log10 scale and point labels
ggplot(inflation_long, aes(x = Año, y = Inflation_Rate, color = Source)) +
geom_line(linewidth = 1) +
geom_point(size = 3) +
geom_text(aes(label = format(Inflation_Rate, big.mark = ",", scientific = FALSE),
angle = angle, hjust = hjust, vjust = vjust),
size = 3) +
scale_y_log10(labels = comma, limits = c(min(inflation_long$Inflation_Rate, na.rm = TRUE) / 1.1, y_upper_limit)) + # Set y-axis limits
scale_x_continuous(breaks = 2016:2024) +
scale_color_manual(values = c("BCV" = "blue", "OVF" = "red")) +
labs(
title = "Venezuela Annual Inflation Rate (BCV vs. OVF)",
subtitle = "Data from 2016 to 2024",
x = "Year",
y = "Annual Inflation Rate (Log Scale)",
color = "Source"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 12, color = "gray"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top"
)
# Create the data frame from the provided text
inflation_data <- data.frame(
Año = 2016:2024,
BCV = c(274.4, 862.6, 130000, 9585.5, 2968.8, 686.4, 234.1, 189.8, 16.6),
OVF = c(550, 2683.7, 1698488.2, 7374.4, 3173, 660, 305.7, 193, 67)
)
# Melt the data frame to long format
inflation_long <- inflation_data %>%
pivot_longer(cols = c(BCV, OVF), names_to = "Source", values_to = "Inflation_Rate")
# Adjust label positions and orientations
inflation_long <- inflation_long %>%
mutate(
angle = 45,
hjust = ifelse(Source == "OVF", 0, 1), # Adjust horizontal alignment
vjust = ifelse(Source == "OVF", -0.5, 1.5) # Adjust vertical alignment
)
# Determine a slightly wider y-axis limit based on the maximum OVF value
max_ovf <- max(inflation_long$Inflation_Rate[inflation_long$Source == "OVF"], na.rm = TRUE)
y_upper_limit <- 4 * max_ovf # Increase by 20%
# Create the inflation rate plot with log10 scale and point labels
ggplot(inflation_long, aes(x = Año, y = Inflation_Rate, color = Source)) +
geom_line(linewidth = 1) +
geom_point(size = 3) +
geom_text(aes(label = format(Inflation_Rate, big.mark = ",", scientific = FALSE),
angle = angle, hjust = hjust, vjust = vjust),
size = 3) +
scale_y_log10(labels = comma, limits = c(min(inflation_long$Inflation_Rate, na.rm = TRUE) / 1.1, y_upper_limit)) + # Set y-axis limits
scale_x_continuous(breaks = 2016:2024) +
scale_color_manual(values = c("BCV" = "blue", "OVF" = "red")) +
labs(
title = "Venezuela Annual Inflation Rate (BCV vs. OVF)",
subtitle = "Data from 2016 to 2024",
x = "Year",
y = "Annual Inflation Rate (Log Scale)",
color = "Source"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 12, color = "gray"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top"
)
# Create the data frame from the provided text
inflation_data <- data.frame(
Año = 2016:2024,
BCV = c(274.4, 862.6, 130000, 9585.5, 2968.8, 686.4, 234.1, 189.8, 16.6),
OVF = c(550, 2683.7, 1698488.2, 7374.4, 3173, 660, 305.7, 193, 67)
)
# Melt the data frame to long format
inflation_long <- inflation_data %>%
pivot_longer(cols = c(BCV, OVF), names_to = "Source", values_to = "Inflation_Rate")
# Adjust label positions and orientations
inflation_long <- inflation_long %>%
mutate(
angle = 45,
hjust = ifelse(Source == "OVF", 0, 1), # Adjust horizontal alignment
vjust = ifelse(Source == "OVF", -0.5, 1.5) # Adjust vertical alignment
)
# Determine a slightly wider y-axis limit based on the maximum OVF value
max_ovf <- max(inflation_long$Inflation_Rate[inflation_long$Source == "OVF"], na.rm = TRUE)
y_upper_limit <- 4 * max_ovf # Increase by 20%
# Create the inflation rate plot with log10 scale and point labels
ggplot(inflation_long, aes(x = Año, y = Inflation_Rate, color = Source)) +
geom_line(linewidth = 1) +
geom_point(size = 3) +
geom_text(aes(label = format(Inflation_Rate, big.mark = ",", scientific = FALSE),
angle = angle, hjust = hjust, vjust = vjust),
size = 3) +
scale_y_log10(labels = comma, limits = c(min(inflation_long$Inflation_Rate, na.rm = TRUE) / 1.5, y_upper_limit)) + # Set y-axis limits
scale_x_continuous(breaks = 2016:2024) +
scale_color_manual(values = c("BCV" = "blue", "OVF" = "red")) +
labs(
title = "Venezuela Annual Inflation Rate (BCV vs. OVF)",
subtitle = "Data from 2016 to 2024",
x = "Year",
y = "Annual Inflation Rate (Log Scale)",
color = "Source"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 12, color = "gray"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top"
)
# Create the data frame from the provided text
inflation_data <- data.frame(
Año = 2016:2024,
BCV = c(274.4, 862.6, 130000, 9585.5, 2968.8, 686.4, 234.1, 189.8, 16.6),
OVF = c(550, 2683.7, 1698488.2, 7374.4, 3173, 660, 305.7, 193, 67)
)
# Melt the data frame to long format
inflation_long <- inflation_data %>%
pivot_longer(cols = c(BCV, OVF), names_to = "Source", values_to = "Inflation_Rate")
# Adjust label positions and orientations
inflation_long <- inflation_long %>%
mutate(
angle = 45,
hjust = ifelse(Source == "OVF", 0, 1), # Adjust horizontal alignment
vjust = ifelse(Source == "OVF", -0.5, 1.5) # Adjust vertical alignment
)
# Determine a slightly wider y-axis limit based on the maximum OVF value
max_ovf <- max(inflation_long$Inflation_Rate[inflation_long$Source == "OVF"], na.rm = TRUE)
y_upper_limit <- 4 * max_ovf # Increase by 20%
# Create the inflation rate plot with log10 scale and point labels
ggplot(inflation_long, aes(x = Año, y = Inflation_Rate, color = Source)) +
geom_line(linewidth = 1) +
geom_point(size = 3) +
geom_text(aes(label = format(Inflation_Rate, big.mark = ",", scientific = FALSE),
angle = angle, hjust = hjust, vjust = vjust),
size = 3) +
scale_y_log10(labels = comma, limits = c(min(inflation_long$Inflation_Rate, na.rm = TRUE) / 1.5, y_upper_limit)) + # Set y-axis limits
scale_x_continuous(breaks = 2016:2024) +
scale_color_manual(values = c("BCV" = "red", "OVF" = "blue")) +
labs(
title = "Venezuela Annual Inflation Rate (BCV vs. OVF)",
subtitle = "Data from 2016 to 2024",
x = "Year",
y = "Annual Inflation Rate (Log Scale)",
color = "Source"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 12, color = "gray"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top"
)
install.packages("devtools")
devtools::install_github("vdeminstitute/ERT")
pkgbuild::check_build_tools(debug = TRUE)
devtools::install_github("vdeminstitute/ERT")
devtools::install_github("vdeminstitute/ERT")
library(ERT)
episodes <- get_eps()
plot_episodes(country = "Venezuela")
plot_episodes(country = "Spain")
plot_episodes(country = "Chile")
library(ERT)
plot_episodes(country = "Peru")
library(ERT)
plot_episodes(country = "Peru")
plot_episodes(country = "El Salvador")
library(ERT)
plot_episodes(country = "El Salvador")
plot_episodes()
plot_all()
r --version
R --version
versio(R)
version(R)
version()
R.version()
version
library(ERT)
plot_episodes(country = "Estonia")
plot_episodes(country = "Romania")
devtools::install_github("pablohernandezb/ESOT")
library(ESOT)
setwd("C:/Users/astro/Downloads/Artículo CSL/data")
ESOT::plot_episodes(country = c("Venezuela"), years = c(1900, 2023), lang = "es")
View(episodes)
ESOT::plot_all(lang = "es")
ven_episodes <- subset(episodes, country_id == 51)
View(ven_episodes)
vdem <- vdemdata::vdem
install.packages("vdemdata")
devtools::install_github("vdeminstitute/vdemdata")
vdem <- vdemdata::vdem
save("vdem", file = "data/vdem.RData")
pd
pwd
pwd()
setwd("D:/Projects/ESOT")
save("vdem", file = "data/vdem.RData")
codebook <- vdemdata::codebook
save("codebook", file = "data/codebook.RData")
Rcpp::compileAttributes()
devtools::document()
devtools::clean_dll()
episodes <- get_eps()
ven_episodes <- subset(episodes, country_id == 51)
episodes <- get_eps()
stopifnot(max(episodes$year) == max(vdem$year))
save("episodes", file = "data/episodes.rda")
# provide the data also as .cvs and .xlsx files for non R-users
write.csv(episodes,"inst/ert.csv")
library("xlsx")
library("rJava")
write.xlsx(episodes, file = "inst/ert.xlsx", sheetName = "episodes",
col.names = TRUE, row.names = TRUE, append = FALSE)
